<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Converters="clr-namespace:WpfApplication1.Classes.Converters"    x:Class="WpfApplication1.UserControls.ucUsablePerson" 
             xmlns:local="clr-namespace:WpfApplication1"
             xmlns:Validaters="clr-namespace:WpfApplication1.Classes.Validaters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Converters:AgeToBrushConverter x:Key="ageToBrushConverter"/>
        <LinearGradientBrush x:Key="SunsetRadiantBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
        					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
        				<Condition Property="IsSelectionActive" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        		</MultiTrigger>
        	</Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Label Content="_Prénom :" Target="{Binding ElementName=txtPrenom, Mode=OneWay}" 
			Margin="3" VerticalAlignment="Top" Background="White"/>
        <TextBox x:Name="txtPrenom" Grid.Column="1" HorizontalAlignment="Left" Margin="10 3" Text="{Binding Prenom}"
			TextWrapping="Wrap" VerticalAlignment="Top" Width="100" Style="{DynamicResource TextBoxStyle1}" />
        <Label Grid.Row="1" Content="_Nom :" Target="{Binding ElementName=txtNom, Mode=OneWay}" 
			Margin="3" VerticalAlignment="Top" Background="White"/>
        <TextBox x:Name="txtNom" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="10 3" Text="{Binding Nom}"
			TextWrapping="Wrap" VerticalAlignment="Top" Width="100"/>
        <Label Grid.Row="2" Content="_Age :" Target="{Binding ElementName=txtAge, Mode=OneWay}" 
			Margin="3" VerticalAlignment="Top" Background="White"/>
        <Grid x:Name="gridAge" Grid.Column="1" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="txtAge" HorizontalAlignment="Left" Grid.Column="0" Margin="10 3"
				TextWrapping="Wrap" VerticalAlignment="Center" 
                Width="100" Foreground="{Binding Text, Converter={StaticResource ageToBrushConverter}, ElementName=txtAge}">
                <TextBox.Text>
                    <Binding Path="Value" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged" ElementName="sliderAge">
                        <Binding.ValidationRules>
                            <ExceptionValidationRule />
                            <Validaters:NumberRangeRule Min="0" Max="150" ValidationStep="ConvertedProposedValue" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Slider Grid.Column="1" x:Name="sliderAge" Height="20" Width="80" HorizontalAlignment="Left" VerticalAlignment="Center" Maximum="150" TickFrequency="1"
				Value="{Binding Age}" SmallChange="1" IsSnapToTickEnabled="True" Margin="10,10,0,13" />
        </Grid>
        <Expander Grid.Row="3" Grid.ColumnSpan="2" Header="Adresse :">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="_Voie :" Target="{Binding ElementName=txtVoie, Mode=OneWay}" 
					Margin="3" VerticalAlignment="Top" Background="White"/>
                <TextBox x:Name="txtVoie" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Margin="10 3"
					TextWrapping="Wrap" VerticalAlignment="Top" Width="100">
                    <Binding Path="Address.Voie" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <!-- Placeholder for the Textbox itself -->
                                <AdornedElementPlaceholder x:Name="textBox" />
                                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red" />
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
                <Label Grid.Row="1" Content="_Ville :" Target="{Binding ElementName=txtVille, Mode=OneWay}" 
					Margin="3" VerticalAlignment="Top" Background="White"/>
                <TextBox x:Name="txtVille" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="10 3" Text="{Binding Address.Ville}"
					TextWrapping="Wrap" VerticalAlignment="Top" Width="100"/>
                <Label Grid.Row="2" Content="_Code Postal :" Target="{Binding ElementName=txtCodePostal, Mode=OneWay}" 
					Margin="3" VerticalAlignment="Top" Background="White"/>
                <TextBox x:Name="txtCodePostal" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Margin="10 3" Text="{Binding Address.CodePostal}" 
					TextWrapping="Wrap" VerticalAlignment="Top" Width="100"/>
            </Grid>
        </Expander>
    </Grid>
</UserControl>
